version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    # This line tells the container to load variables from your .env file
    env_file:
      - ./gcp_app/.env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - inventory-network

  backend:
    build:
      context: ./gcp_app/ws
      dockerfile: docker/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./gcp_app/ws:/app
    env_file:
      - ./gcp_app/.env
    depends_on:
      mysql:
        condition: service_healthy
    command: python ws.py
    restart: always
    networks:
      - inventory-network

  frontend:
    build:
      context: ./gcp_app/ui
      dockerfile: docker/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./gcp_app/ui:/app
      - /app/node_modules
    # ðŸ”¹ UPDATED: The 'proxy' setting in package.json is better than env_file here
    # env_file:
    #   - ./gcp_app/.env
    depends_on:
      - backend
    restart: always
    networks:
      - inventory-network

volumes:
  mysql_data:

networks:
  inventory-network:
    driver: bridge