services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - inventory-network

  backend:
    build:
      context: ./ws
      dockerfile: docker/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./ws:/app
    environment:
      FLASK_ENV: development
      # --- THIS LINE IS CHANGED ---
      FLASK_DEBUG: 0
      DB_HOST: mysql
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
    depends_on:
      mysql:
        condition: service_healthy
    command: python ws.py
    restart: always
    networks:
      - inventory-network

  frontend:
    build:
      context: ./ui
      dockerfile: docker/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./ui:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - WDS_SOCKET_HOST=${WDS_SOCKET_HOST}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
    depends_on:
      - backend
    restart: always
    networks:
      - inventory-network

volumes:
  mysql_data:

networks:
  inventory-network:
    driver: bridge